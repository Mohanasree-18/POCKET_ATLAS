1.this project is about converting currency from one country to other
2.for this we will use API called "Exchange-Rate-API"
3.Inorder to use this API you need to have API key
*"Exchange-Rate-API"
1.go this official webiste
2.enter your email, API key will be generated
3.i got my API key "985de71abaa62b7aed796768"

**NOW WE ARE GOING TO BUILD APPLICATION
1.for frontrnd vite+react
2.API debugging -thunderclient
3.backend
4.This application is same as mern expense tracker but here node and react will interact with 3rd party APIs


**                < BACKEND>

1.create backend folder
2.create app.js file in this folder
3.now open terminal and run this command <npm init --yes>
  this is used to initialise project
4.this command will generate package.json file
5.open that file and change main:index.js to app.js since app.js is what we are using in our project
6.now install all requirements
<npm i express axios cors express-rate-limit dotenv>

*express-rate-limit  significance
1.The express-rate-limit middleware is used in Express.js applications to limit the number of requests a clien
  t can make to your server over a specified period of time. This helps protect your server from being
   overwhelmed by too many requests in a short period, which can be caused by malicious attacks 
   (e.g., DDoS attacks) or by accidental overuse.

*<app.js> file
1.importations
2.write middlewares
3.write currency cinversion code
4.start the server
* node --watch app we can see server is runnning sucessfully
6.Now lets integrate API 
7.go to website,documentation,API endpoints,copy url of API 
8.initialise the url to an object in <app.js> file
9.create an .env file to store API key
10. URL IS https://v6.exchangerate-api.com/v6/YOUR-API-KEY/pair/EUR/GBP/AMOUNT
 if we observe last part of URL is dynacmic from YOURAPIKEY to last
 this part consists of from,to,amount of the transaction
11.you can view all from,to,amout using req.body
12.Now lets explore thunder client

*<thunderclient>
1.hit on new requests
2.paste this url <http://localhost:5000/api/convert> and change type to POST
3.hit on send request 
4.buffering happens then cancel request 
5.Now open body and enter from,to and amount as some values and send request
6.now these sent values will be printed on console
7.Now we have to pass these values to API to get result

*<APP.JS> file
1.Now write code to generate API URL in the simialr that is given in line no 10
2.once its done to check it send the request once again through thunder client
3.modify code to optimal and send request again now you can see response in thunderclient only with 200 status code
4.Lets create frontend

**                   <FRONTEND>
1.create folder frontend
2.open that folder in terminal 
3.run this command <npm create vite@latest>
4.now run <npm i> to install all packages
5 <npm i axios>
6.now develop frontend by creating folders and files in src
7.src folder conatins app.jsx,main.jsx,currencycovertor.css
8.go to backend and import <cors>

*<cors> significance
/The `cors` middleware in Express.js is used to enable Cross-Origin Resource Sharing (CORS). This allows your
 server to handle requests from different origins (domains), which is essential for enabling web applications 
 to access resources from other servers. It's important for API security and flexibility in modern web development.//

9.after this installation come to frontend and handle errors
* now npm run dev

*currency convertor app is working efficiently

/THIS PROJECT IS MAINLY ABOUT BACKEND AND THUNDERCLIENT AND THIRDPARTY APLI HANDLIING 
/MAINLY FOCCUSSED ON API
/BACKEND FOCCUSSED PROJECT
/FRONTED IS HARDLY MANAGED TO SHOW result






